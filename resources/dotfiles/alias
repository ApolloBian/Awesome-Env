# Servers
# alias Linux='ssh apollo@10.211.55.21'
# alias Raspberry='ssh pi@59.78.43.47'
# alias wztest='ssh -Y -p 12345 apollo@202.120.36.29'
# alias delltest='ssh -Y -p 1234 apollo@202.120.36.29'
# alias Stanford_X='ssh -X asc@202.120.32.237'
alias GGLinux='ssh -Y apollo@202.120.36.28'
alias selinux='ssh -Y shengbin@202.120.38.35'
# alias Stanford_X='ssh -X asc@218.193.179.246'
# alias Georgia_X='ssh -X asc@202.120.32.240'
# alias Illinois_X='ssh -X asc@218.193.179.247'
# alias Stanford='ssh asc@218.193.179.246'
# alias Georgia='ssh asc@202.120.32.240'
# alias Illinois='ssh asc@218.193.179.247'
alias sbserver='ssh -p 22 -Y shengbin@202.120.38.35'
#alias Inspur='ssh asc16.inspur.com'
alias gauss='ssh -p 5566 -Y tlb96@202.120.38.69'
alias stanford='ssh -p 6620 -Y tlb96@202.120.38.125'
alias itmo='ssh -p 8888 -Y tlb96@202.120.38.125'
alias apple='ssh -p 219 -Y tlb96@222.92.117.141'

# Cmd
alias ns='nvidia-smi'
alias vim='print -n "\033[2 q"; vim'
alias cl='clear'
alias tc='vim ~/.tmux.conf'
alias grep='grep --color=always'
#http://droidyue.com/blog/2016/04/04/set-shadowsocks-proxy-for-terminal/index.html
alias sson='export http_proxy=http://localhost:8123; export https_proxy=http://localhost:8123;'
alias ssoff='unset http_proxy; unset https_proxy;'
alias ipinfo='curl ip.gs'
ignore_option='-I "*pyc" -I __pycache__ -I tags'
# alias ls='ls '$ignore_option' --color=auto'
# alias tree='tree '$ignore_option
alias la='ls -a'
alias lh='ls -lh'
alias tm='tmux'
alias ta='tmux attach'
alias td='tmux detach'
alias tl='tmux ls'

alias aswork='pwd > $HOME/workdir'
alias work='cd `cat $HOME/workdir`'

alias vv="vim --version | \
    python -c \"
#!/usr/bin/env python
import sys
import argparse
import re


'''
escape seqs:
    style  font      bg
\033[  0;   37;     48  m
\033[0m (reset color)
'''

args = None

def proc(line):
    global args
    if line[:9] in ['VIM - Vi ', 'Included ', 'Compiled ']:
        pattern = re.compile(r'''
            (\d+[\.-]\d+)    | # version/patch
            (\w*\@[.\w]*)    | # email
            foobar''', re.VERBOSE)
        line, _ = pattern.subn(
            r'\033[1;35m\1' +
            r'\033[1;33;34m\2' +
            r'\033[0m',
            line)
        return line
    elif line[0] in ['-', '+']:
        if not args.f:
            return ''
        # function lines
        func_pattern = re.compile(r'''
            (-[\w\(\)]+)    | # -function
            (
             [-+]python\d?|
             [-+]termguicolors\d?|
             [-+]X11|
             [-+]\w*clip\w*|
             [-+]num\d*|
            )               | # interested functions
            foobar''', re.VERBOSE)
        # -func with red blink
        line, _ = func_pattern.subn(
                r'\033[9;31m\1' +   # -function, red color
                r'\033[1;32m\2' +   # -function, red color
                r'\033[0m' ,        # reset color
                line)
        return line
    elif re.match('Compilation:', line):
        if not args.c:
            return ''
        return line
    elif re.match('Linking:', line):
        if not args.l:
            return ''
        return line
    else:
        return line
parser = argparse.ArgumentParser()
parser.add_argument('-f', action='store_true')
parser.add_argument('-c', action='store_true')
parser.add_argument('-l', action='store_true')
args = parser.parse_args()
for l in sys.stdin:
    print(proc(l), end='')
\" "
